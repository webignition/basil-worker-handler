name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  unit:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download dependencies
        uses: php-actions/composer@v2
        with:
          args: --ignore-platform-reqs --quiet

      - name: Run PHPUnit unit tests
        run: composer test-unit

  functional:
    name: Functional tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: amqp, pgsql

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: |
          composer install --no-progress --prefer-dist

      - name: Run DB migrations
        run: |
          php bin/console doctrine:migrations:migrate --no-interaction
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?charset=UTF-8

      - name: Run tests
        run: |
          composer test-functional
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?charset=UTF-8

  integration:
    name: Integration tests
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:password!@127.0.0.1:5432/basil-worker-db?charset=UTF-8

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: amqp, pgsql

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-progress --prefer-dist

      - name: Setup integration environment
        run: composer integration-setup

      - name: Run synchronous tests
        run: composer test-integration-sync

      - name: Run asynchronous tests
        run: |
          php bin/console --env=integration_async messenger:consume async > /dev/null &
          composer test-integration-async
          php bin/console --env=integration_async messenger:stop

      - name: Setup container integration environment
        run: composer image-integration-setup

#  integration-again:
#    name: Integration tests again
#    runs-on: ubuntu-latest
#    env:
#      DATABASE_URL: postgres://postgres:password!@127.0.0.1:5432/basil-worker-db?charset=UTF-8
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Install extensions
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: '7.4'
#          extensions: amqp, pgsql
#
#      - name: Get composer cache directory
#        id: composercache
#        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
#
#      - name: Cache composer dependencies
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.composercache.outputs.dir }}
#          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#          restore-keys: ${{ runner.os }}-composer-
#
#      - name: Install composer dependencies
#        run: composer install --no-progress --prefer-dist
#
#      - name: Setup integration environment
#        run: composer integration-setup
#
#      - name: Run synchronous tests
#        run: composer test-integration-sync
#
#      - name: Run asynchronous tests
#        run: |
#          php bin/console --env=integration_async messenger:consume async > /dev/null &
#          composer test-integration-async
